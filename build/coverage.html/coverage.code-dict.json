{"/home/travis/build/npmtest/node-npmtest-ticons/test.js":"/* istanbul instrument in package npmtest_ticons */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireExampleJsFromReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-ticons/lib.npmtest_ticons.js":"/* istanbul instrument in package npmtest_ticons */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_ticons = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_ticons = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-ticons/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-ticons && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_ticons */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_ticons\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_ticons.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_ticons.rollup.js'] =\n            local.assetsDict['/assets.npmtest_ticons.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_ticons.__dirname + '/lib.npmtest_ticons.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-ticons/node_modules/ticons/index.js":"// jscs:disable jsDoc\n'use strict';\n\nvar _ = require('underscore'),\n  path = require('path'),\n  fs = require('fs-extended'),\n  async = require('async'),\n  config = require('./lib/config'),\n  constants = require('./lib/constants'),\n  logger = require('./lib/logger'),\n  jobs = require('./lib/jobs'),\n  gm = require('gm');\n\n/**\n * Generates icons\n * @param  {Object}   opts     options\n * @param  {Function} callback callback(err, output)\n */\nexports.icons = function(opts, callback) {\n  opts = opts || {};\n  opts.type = 'icon';\n\n  // config\n  config(opts, function(err, cfg) {\n\n    if (err) {\n      return callback(err);\n    }\n\n    // create tasks\n    jobs.createTasks(cfg, function(err, tasks) {\n\n      if (err) {\n        return callback(err);\n      }\n\n      if (cfg.cli) {\n        logger.info('Starting ' + _.size(tasks) + ' jobs');\n      }\n\n      // run tasks\n      async.parallel(tasks, callback);\n\n    });\n\n  });\n\n};\n\n/**\n * Generates icons\n * @param  {Object}   opts     options\n * @param  {Function} callback callback(err, output)\n */\nexports.splashes = function(opts, callback) {\n  opts = opts || {};\n  opts.type = 'splash';\n\n  // config\n  config(opts, function(err, cfg) {\n\n    if (err) {\n      return callback(err);\n    }\n\n    // create tasks\n    jobs.createTasks(cfg, function(err, tasks) {\n\n      if (err) {\n        return callback(err);\n      }\n\n      if (cfg.cli) {\n        logger.info('Starting ' + _.size(tasks) + ' jobs');\n      }\n\n      // run tasks\n      async.parallel(tasks, callback);\n\n    });\n\n  });\n\n};\n\n/**\n * Generates assets\n * @param  {Object}   opts     options\n * @param  {Function} callback callback(err, output)\n */\nexports.assets = function(opts, callback) {\n  opts = opts || {};\n  opts.type = 'asset';\n\n  // config\n  config(opts, function(err, cfg) {\n\n    if (err) {\n      return callback(err);\n    }\n\n    var stat = fs.statSync(cfg.input);\n    var files = [];\n\n    var inputIsUnderOutput = cfg.input.indexOf(path.join(cfg.outputDir, cfg.assetsDir)) === 0;\n\n    jobs.getSpecs(cfg, function(err, specs) {\n      var outputSpecs = {};\n      var inputSpec;\n\n      _.each(specs, function(spec, name) {\n\n        if (!inputSpec) {\n          var re = new RegExp((spec.suffix || '') + '\\.(png|jpg)$');\n\n          // if input is not under output\n          if (!inputIsUnderOutput) {\n\n            // and the user has specified dpi\n            if (cfg.origDpi) {\n\n              // and this spec matches\n              if (spec.dpi === cfg.origDpi) {\n                inputSpec = spec;\n              }\n\n            } else {\n\n              // if this spec has a suffix we can and do match\n              if (spec.suffix && stat.isFile() && cfg.input.match(re)) {\n                inputSpec = spec;\n              }\n            }\n\n            // since our input is not under ouput, we need to override the output path\n            if (inputSpec) {\n              inputSpec = _.defaults({\n                output: stat.isFile() ? path.dirname(cfg.input) : cfg.input\n              }, inputSpec);\n            }\n\n          } else {\n\n            // our input is under this specific spec path\n            if (cfg.input.substr(0, spec.output.length) === spec.output) {\n\n              // this spec has NO suffix we need to match as well\n              if (!spec.suffix) {\n                inputSpec = spec;\n                return; // skip this spec as output\n              }\n\n              // the input is a file\n              if (stat.isFile()) {\n\n                // which matches the suffix\n                if (cfg.input.match(re)) {\n                  inputSpec = spec;\n                  return; // skip this spec as output\n                }\n\n              } else {\n\n                // see if there are files under the path that match the suffix\n                var suffixFiles = fs.listFilesSync(cfg.input, {\n                  recursive: true,\n                  prependDir: true,\n                  filter: function(itemPath, itemStat) {\n                    return itemPath.match(re);\n                  }\n                });\n\n                // there are\n                if (suffixFiles.length > 0) {\n                  inputSpec = spec;\n                  return; // skip this spec as output\n                }\n              }\n            }\n          }\n        }\n\n        // include this spec in the output\n        outputSpecs[name] = spec;\n      });\n\n      if (!inputSpec) {\n        return callback('Could not identify input density.');\n      }\n\n      if (outputSpecs['android-res-mdpi'] && outputSpecs['ios-images']) {\n        delete outputSpecs['android-res-mdpi'];\n      }\n\n      if (stat.isDirectory()) {\n\n        files = fs.listFilesSync(cfg.input, {\n          recursive: true,\n          prependDir: true,\n          filter: function(itemPath, itemStat) {\n\n            // only filter on suffix if our input is in our output dir\n            return itemPath.match(new RegExp(((!inputIsUnderOutput || !inputSpec.suffix) ? '' : inputSpec.suffix) + '\\.(png|jpg)$'));\n          }\n        });\n\n      } else {\n        files.push(cfg.input);\n      }\n\n      if (files.length === 0) {\n        return callback('Could not find input images.');\n      }\n\n      var tasks = [];\n\n      _.each(files, function(source) {\n        var sourceTime = fs.statSync(source).mtime;\n        var relativePath = source.substr(inputSpec.output.length);\n\n        // replace any suffixes from our source\n        relativePath = relativePath.replace(/(?:@[0-9]x|~[a-z]+)(\\.[a-z]+)$/, '$1');\n\n        _.each(outputSpecs, function(spec, n) {\n\n          if (spec.dpi > inputSpec.dpi) {\n            logger.info('Skipped higher dpi: ' + spec.name.cyan);\n\n            return;\n          }\n\n          var target = path.join(spec.output, relativePath);\n\n          if (spec.suffix) {\n            target = target.replace(/(\\.(png|jpg)+)$/i, spec.suffix + '$1');\n          }\n\n          if (!fs.existsSync(target.replace(/(\\.png)$/, '.9$1')) && (!fs.existsSync(target) || (sourceTime > fs.statSync(target).mtime))) {\n\n            tasks.push(function(callback) {\n\n              if (inputSpec.dpi === spec.dpi) {\n                fs.copyFileSync(source, target);\n\n                // async feedback for CLI\n                if (cfg.cli) {\n                  logger.info('Copied: ' + target.cyan);\n                }\n\n                return callback(null, target);\n              }\n\n              fs.createDirSync(path.dirname(target));\n\n              var im = gm.subClass({\n                imageMagick: true\n              });\n\n              // read\n              var convert = im(source);\n\n              // resize\n              convert.in('-resize', ((spec.dpi / inputSpec.dpi) * 100) + '%');\n\n              // show command\n              if (cfg.trace) {\n                logger.debug('Executing: ' + convert.args().join(' ').cyan);\n              }\n\n              convert.write(target, function(err) {\n\n                if (err) {\n                  return callback(err);\n                }\n\n                // async feedback for CLI\n                if (cfg.cli) {\n                  logger.info('Generated: ' + target.cyan);\n                }\n\n                // pass back output\n                callback(null, target);\n\n              });\n\n              // show command\n              if (cfg.trace && cfg.cli) {\n                logger.debug('Executing: ' + convert.args().join(' ').cyan);\n              }\n\n            });\n\n          }\n\n        });\n\n      });\n\n      async.series(tasks, callback);\n    });\n\n  });\n\n};\n","/home/travis/build/npmtest/node-npmtest-ticons/node_modules/ticons/lib/config.js":"\"use strict\";\n\nvar path = require('path'),\n  fs = require('fs'),\n  _ = require('underscore'),\n  constants = require('./constants'),\n  gm = require('gm'),\n  logger = require('./logger'),\n  async = require('async'),\n  semver = require('semver'),\n  utils = require('./utils');\n\n/**\n * Intitializes config based on options\n * @param  {Object}   opts     options\n * @param  {Function} callback callback(err, cfg)\n */\nmodule.exports = function config(opts, callback) {\n  opts = opts || {};\n\n  // already done\n  if (opts && opts.__cfg) {\n    return callback(null, opts);\n  }\n\n  // convert negatives (already done by CLI, but not vor module)\n  if (opts.noFix) {\n    opts.fix = false;\n    delete opts.noFix;\n  }\n  if (opts.noNine) {\n    opts.nine = false;\n    delete opts.noNine;\n  }\n  if (opts.noCrop) {\n    opts.crop = false;\n    delete opts.noCrop;\n  }\n\n  var cfg = _.extend({\n    __cfg: true,\n    type: undefined,\n    cli: false,\n    input: undefined,\n    platforms: undefined,\n    radius: 0,\n    sdkVersion: undefined,\n    locale: undefined,\n    minDpi: constants.dpi.mdpi,\n    maxDpi: constants.dpi.xxxhdpi,\n    origDpi: undefined,\n    orientation: undefined,\n    fix: true,\n    nine: true,\n    crop: true,\n    label: false,\n    outputDir: undefined,\n    assetsDir: undefined,\n    platformDir: undefined,\n    i18nDir: undefined,\n    storyboard: false,\n    alloy: undefined,\n    trace: false,\n    inputWidth: undefined,\n    inputHeight: undefined,\n    inputRatio: undefined,\n    alloyBase: 'app'\n  }, opts);\n\n  var isProject = false,\n    isWidget = false,\n    tiappxml;\n\n  async.series({\n\n    radius: function (next) {\n\n      if (cfg.radius !== 0) {\n        cfg.radius = parseInt(cfg.radius, 10);\n\n        if (cfg.radius < 0 || cfg.radius > 50) {\n          return next('The `radius` percentage should be between 0 and 50.');\n        }\n      }\n\n      next();\n    },\n\n    outputDir: function (next) {\n      var manualOutput = false;\n\n      if (!cfg.outputDir) {\n        cfg.outputDir = process.cwd();\n\n      } else {\n        manualOutput = true;\n      }\n\n      // We are inside Resources\n      if (path.basename(cfg.outputDir) === 'Resources') {\n\n        // go up one level\n        cfg.outputDir = path.dirname(cfg.outputDir);\n        cfg.assetsDir = 'Resources';\n\n      } else if (path.basename(cfg.outputDir) === 'assets') {\n\n        // go up one level\n        cfg.outputDir = path.dirname(cfg.outputDir);\n        cfg.assetsDir = 'assets';\n\n        // we are not under a widget\n        if (!fs.existsSync(path.join(cfg.outputDir, 'widget.json'))) {\n\n          // go up one more level\n          cfg.assetsDir = path.join(path.basename(cfg.outputDir), cfg.assetsDir);\n          cfg.outputDir = path.dirname(cfg.outputDir);\n        }\n\n        cfg.alloy = true;\n      }\n\n      fs.exists(path.join(cfg.outputDir, 'tiapp.xml'), function (exists) {\n\n        if (exists) {\n          isProject = true;\n          return next();\n        }\n\n        fs.exists(path.join(cfg.outputDir, 'widget.json'), function (exists) {\n\n          if (!exists) {\n\n            if (!manualOutput) {\n              return next('Either specify `outputDir` or run in a project root');\n\n            } else {\n              return next();\n            }\n          }\n\n          isWidget = true;\n\n          if (cfg.type !== 'asset') {\n            return next('You can only target a widget using the `assets` command.');\n          }\n\n          return next();\n        });\n\n      });\n    },\n\n    alloy: function (next) {\n\n      if (cfg.alloy !== undefined) {\n        return next();\n      }\n\n      fs.exists(path.join(cfg.outputDir, cfg.alloyBase, 'controllers', 'index.js'), function (exists) {\n        cfg.alloy = exists;\n\n        next();\n      });\n    },\n\n    assetsDir: function (next) {\n\n      // set assetsDir\n      if (!cfg.assetsDir) {\n        if (isWidget) {\n          cfg.assetsDir = 'assets';\n        } else if (cfg.alloy) {\n          cfg.assetsDir = path.join(cfg.alloyBase, 'assets');\n        } else {\n          cfg.assetsDir = 'Resources';\n        }\n      }\n\n      next();\n    },\n\n    dpi: function (next) {\n\n      // convert dpi constants\n      cfg.minDpi = constants.dpi[cfg.minDpi] || parseInt(cfg.minDpi, 10);\n      cfg.maxDpi = constants.dpi[cfg.maxDpi] || parseInt(cfg.maxDpi, 10);\n      cfg.origDpi = (cfg.origDpi === undefined) ? undefined : (constants.dpi[cfg.origDpi] || parseInt(cfg.origDpi, 10));\n\n      var validDpi = _.values(constants.dpi);\n\n      if (validDpi.indexOf(cfg.minDpi) === -1) {\n        return next('Invalid value `' + cfg.minDpi + '` for `min-dpi`.');\n      }\n\n      if (validDpi.indexOf(cfg.maxDpi) === -1) {\n        return next('Invalid value `' + cfg.maxDpi + '` for `max-dpi`.');\n      }\n\n      if (cfg.origDpi !== undefined && validDpi.indexOf(cfg.origDpi) === -1) {\n        return next('Invalid value `' + cfg.origDpi + '` for `orig-dpi`.');\n      }\n\n      next();\n    },\n\n    tiappxml: function (next) {\n\n      if (!isProject) {\n        return next();\n      }\n\n      fs.readFile(path.join(cfg.outputDir, 'tiapp.xml'), {\n        encoding: 'utf-8'\n      }, function (err, data) {\n\n        if (!err) {\n          tiappxml = data;\n        }\n\n        next();\n      });\n\n    },\n\n    sdkVersion: function (next) {\n\n      if (cfg.sdkVersion !== undefined) {\n        return next();\n      }\n\n      if (tiappxml) {\n        var match = tiappxml.match(/<sdk-version>([0-9]+\\.[0-9]+\\.[0-9]+)[^<]*<\\/sdk-version>/);\n\n        if (match) {\n          cfg.sdkVersion = match[1];\n\n          return next();\n        }\n      }\n\n      cfg.sdkVersion = constants.sdkVersion;\n\n      return next();\n    },\n\n    platformDir: function (next) {\n\n      if (cfg.platformDir !== undefined) {\n        return next();\n      }\n\n      if (!cfg.alloy || (cfg.sdkVersion !== undefined && semver.lt(cfg.sdkVersion, '5.2.0'))) {\n        cfg.platformDir = 'platform';\n      } else {\n        cfg.platformDir = path.join('app', 'platform');\n      }\n\n      return next();\n    },\n\n    i18nDir: function (next) {\n\n      if (cfg.i18nDir !== undefined) {\n        return next();\n      }\n\n      if (!cfg.alloy || (cfg.sdkVersion !== undefined && semver.lt(cfg.sdkVersion, '5.2.0'))) {\n        cfg.i18nDir = 'i18n';\n      } else {\n        cfg.i18nDir = path.join('app', 'i18n');\n      }\n\n      return next();\n    },\n\n    platforms: function (next) {\n\n      if (cfg.platforms) {\n        return next();\n      }\n\n      // get platforms from widgets\n      // widget.json\n      if (isWidget) {\n\n        fs.readFile(path.join(cfg.outputDir, 'widget.json'), {\n          encoding: 'utf-8'\n        }, function (err, data) {\n\n          if (err) {\n            return next(err);\n          }\n\n          try {\n            var widgetjson = JSON.parse(data);\n\n            if (_.isObject(widgetjson) && widgetjson.platforms) {\n              cfg.platforms = widgetjson.platforms;\n            }\n\n            next();\n\n            // no widget.json\n          } catch (err) {\n            next(err);\n          }\n\n        });\n\n      } else if (tiappxml) {\n        var match;\n        var deploymentTargets = [];\n        var re = /<target[^>]+device=\"([a-z]+)\"[^>]*>true<\\/target>/gi;\n\n        // add each deployment target\n        while ((match = re.exec(tiappxml)) !== null) {\n          deploymentTargets.push(match[1]);\n        }\n\n        // add apple watch\n        if (/<extension/.test(tiappxml)) {\n          deploymentTargets.push('apple-watch');\n        }\n\n        // use deployment targets\n        if (_.size(deploymentTargets) > 0) {\n          cfg.platforms = deploymentTargets;\n\n          // use all\n        } else {\n          cfg.platforms = _.clone(constants.platforms);\n        }\n\n        next();\n\n      } else {\n        next();\n      }\n    },\n\n    platformsClean: function (next) {\n\n      if (!cfg.platforms) {\n        cfg.platforms = 'all';\n      }\n\n      if (_.isString(cfg.platforms)) {\n\n        // use all\n        if (cfg.platforms === 'all') {\n          cfg.platforms = _.clone(constants.platforms);\n\n          // split\n        } else {\n          cfg.platforms = cfg.platforms.split(',');\n        }\n      }\n\n      // convert platforms to short-hand flags\n      _.each(constants.platforms, function (platform) {\n        cfg[platform] = _.indexOf(cfg.platforms, platform) !== -1;\n      });\n\n      if (cfg.ios) {\n        cfg.iphone = cfg.ipad = true;\n      } else {\n        cfg.ios = cfg.iphone || cfg.ipad;\n      }\n\n      next();\n    },\n\n    orientation: function (next) {\n\n      // no orientation\n      if (!cfg.orientation && cfg.type === 'splash') {\n        var orientation, match;\n\n        // tiapp.xml found\n        if (tiappxml) {\n\n          // mobileweb\n          if (cfg.mobileweb) {\n\n            // always mixed\n            orientation = 'all';\n          }\n\n          // iphone\n          if (cfg.iphone && orientation !== 'all') {\n\n            // splash is always portrait on iphone\n            orientation = 'portrait';\n          }\n\n          // ipad\n          if (cfg.ipad && orientation !== 'all') {\n            var landscape = !!tiappxml.match(/UISupportedInterfaceOrientations~ipad((?!~iphone)[\\s\\S])+UIInterfaceOrientationLandscape/);\n            var portrait = !!tiappxml.match(/UISupportedInterfaceOrientations~ipad((?!~iphone)[\\s\\S])+UIInterfaceOrientationPortrait/);\n\n            if (landscape !== portrait) {\n              orientation = landscape ? 'landscape' : 'portrait';\n            } else {\n              orientation = 'all';\n            }\n          }\n\n          // android\n          if (cfg.android && orientation !== 'all') {\n\n            // main activity locked\n            if ((match = tiappxml.match(/android:screenOrientation=\"(landscape|portrait)\"((?!<activity)[\\s\\S])+android.intent.action.MAIN/))) {\n\n              if (!orientation) {\n                orientation = match[1];\n              } else if (orientation !== match[1]) {\n                orientation = 'all';\n              }\n            }\n          }\n\n          // blackberry\n          if (cfg.blackberry && orientation !== 'all') {\n\n            // locked\n            if ((match = tiappxml.match(/<blackberry>[\\s\\S]*<orientation>(landscape|portrait)<\\/orientation>[\\s\\S]*<\\/blackberry>/))) {\n\n              if (!orientation) {\n                orientation = match[1];\n              } else if (orientation !== match[1]) {\n                orientation = 'all';\n              }\n            }\n          }\n        }\n\n        // orientation locked for all platforms\n        if (orientation && orientation !== 'all') {\n          cfg.orientation = orientation;\n        }\n\n        // all\n      } else if (cfg.orientation === 'all') {\n        cfg.orientation = undefined;\n      }\n\n      next();\n    },\n\n    resolveInput: function (next) {\n\n      if (!cfg.input) {\n        return next();\n      }\n\n      fs.realpath(cfg.input, function (err, resolvedPath) {\n\n        if (err) {\n          return next(err);\n        }\n\n        cfg.input = resolvedPath;\n\n        next();\n      });\n\n    },\n\n    detectInput: function (next) {\n\n      // no input\n      if (cfg.type && !cfg.input) {\n        var potentialDefs = [];\n\n        if (cfg.type === 'asset') {\n          potentialDefs.push(path.join(cfg.outputDir, cfg.assetsDir, 'android', 'images', 'res-xxxhdpi'));\n          potentialDefs.push(path.join(cfg.outputDir, cfg.assetsDir, 'iphone', 'images'));\n          potentialDefs.push(path.join(cfg.outputDir, cfg.assetsDir, 'android', 'images', 'res-xxhdpi'));\n\n        } else {\n\n          if (cfg.storyboard && _.difference(cfg.platforms, ['ios', 'iphone', 'ipad']).length === 0) {\n            potentialDefs.push(path.join(cfg.outputDir, cfg.assetsDir, 'iphone', 'LaunchLogo@2x~ipad.png'));\n            potentialDefs.push(path.join(cfg.outputDir, cfg.assetsDir, 'iphone', 'LaunchLogo@3x~iphone.png'));\n          }\n\n          potentialDefs.push(path.join(cfg.outputDir, 'DefaultIcon.png'));\n          potentialDefs.push(path.join(cfg.outputDir, cfg.assetsDir, 'iphone', 'iTunesArtwork@2x'));\n        }\n\n        async.detectSeries(potentialDefs, function (potentialDef, next) {\n\n          fs.exists(potentialDef, function (exists) {\n\n            if (exists) {\n              cfg.input = potentialDef;\n            }\n\n            next(exists);\n\n          });\n\n        }, function (result) {\n\n          if (!result) {\n            return next('missing required argument `input` or one of the default paths');\n          }\n\n          next();\n\n        });\n\n      } else {\n        next();\n      }\n    },\n\n    sizeInput: function (next) {\n\n      if (cfg.type === 'asset') {\n        return next();\n      }\n\n      if (cfg.cli) {\n        logger.info('Reading input dimensions');\n      }\n\n      var im = gm.subClass({\n        imageMagick: true\n      });\n\n      // read input\n      im(cfg.input).ping().size(function (err, size) {\n\n        if (err) {\n          return next(err.code === 'ENOENT' ? 'Please install ImageMagick.' : err);\n        }\n\n        cfg.inputWidth = size.width;\n        cfg.inputHeight = size.height;\n\n        next();\n      });\n    },\n\n    ratio: function (next) {\n\n      if (cfg.inputWidth && cfg.inputHeight) {\n        cfg.inputRatio = cfg.inputWidth / cfg.inputHeight;\n      }\n\n      next();\n    }\n\n  }, function (err) {\n\n    if (err) {\n      return callback(err);\n    }\n\n    // display cfg\n    if (cfg.trace) {\n      logger.debug('Initialized config:');\n      utils.prettyJSON(_.omit(cfg, '__cfg'));\n      console.log();\n    }\n\n    // pass back cfg\n    callback(null, cfg);\n\n  });\n\n};\n","/home/travis/build/npmtest/node-npmtest-ticons/node_modules/ticons/lib/constants.js":"exports.platforms = ['ios', 'iphone', 'ipad', 'android', 'mobileweb', 'blackberry', 'tizen', 'apple-watch', 'windows'];\n\nexports.orientations = ['portrait', 'landscape'];\n\nexports.sdkVersion = '5.2.0';\n\nexports.dpi = {\n\tldpi: 120,\n\tmdpi: 160,\n\t'@1x': 160,\n\thdpi: 240,\n\txhdpi: 320,\n\tretina: 320,\n\t'@2x': 320,\n\txxhdpi: 480,\n\tretinahd: 480,\n\t'retina-hd': 480,\n\t'@3x': 480,\n\txxxhdpi: 640\n};\n","/home/travis/build/npmtest/node-npmtest-ticons/node_modules/ticons/lib/logger.js":"// jscs:disable jsDoc\n'use strict';\n\nvar colors = require('colors'),\n\t_ = require('underscore');\n\nvar levels = {\n\tinfo: {\n\t\tcolor: colors.white\n\t},\n\ttrace: {\n\t\tcolor: colors.grey\n\t},\n\tdebug: {\n\t\tcolor: colors.blue,\n\t\tlevel: 'log'\n\t},\n\terror: {\n\t\tcolor: colors.red\n\t},\n\twarn: {\n\t\tcolor: colors.yellow\n\t},\n\tok: {\n\t\tcolor: colors.green,\n\t\tlevel: 'info'\n\t}\n};\n\n_.each(levels, function (settings, label) {\n\texports[label] = function (msg) {\n\t\tconsole[settings.level || label](settings.color('[' + label.toUpperCase() + ']') + (label.length !== 5 ? (new Array(6 - label.length).join(' ')) : '') + ' ' + msg);\n\t};\n});\n","/home/travis/build/npmtest/node-npmtest-ticons/node_modules/ticons/lib/utils.js":"// jscs:disable jsDoc\n'use strict';\n\nvar _ = require('underscore'),\n\tcolors = require('colors');\n\nfunction prettyJSON(val, key, depth) {\n\n\tif (!depth) {\n\t\tdepth = 0;\n\t}\n\n\tvar prefix = '';\n\n\tif (_.isString(key)) {\n\n\t\tif (depth) {\n\t\t\tprefix += new Array(depth).join(' ');\n\t\t}\n\n\t\tprefix += key.toString().green + ':';\n\n\t}\n\n\tif (_.isArray(val) && !_.isObject(_.first(val))) {\n\t\tconsole.log(prefix + ' ' + val.join(', '));\n\n\t} else if (_.isObject(val)) {\n\t\tconsole.log(prefix);\n\n\t\tif (!_.isArray(val)) {\n\t\t\tdepth += 2;\n\t\t}\n\n\t\t_.each(val, function (val, key) {\n\t\t\tprettyJSON(val, key, depth);\n\t\t});\n\n\t} else {\n\t\tconsole.log(prefix + ((val !== null && val !== undefined) ? ' ' + val : ''));\n\t}\n}\n\nexports.prettyJSON = prettyJSON;\n","/home/travis/build/npmtest/node-npmtest-ticons/node_modules/ticons/lib/jobs.js":"// jscs:disable jsDoc\n'use strict';\n\nvar _ = require('underscore'),\n  path = require('path'),\n  fs = require('fs-extended'),\n  gm = require('gm'),\n  semver = require('semver'),\n  colors = require('colors'),\n  config = require('./config'),\n  specs = require('./specs'),\n  logger = require('./logger');\n\n/**\n * Creates task to run async\n * @param  {String}   name     spec to use\n * @param  {Object}   opts     options\n * @param  {Function} callback callback(err, task)\n */\nexports.createTask = function createTask(name, opts, callback) {\n  var self = this;\n\n  // config\n  config(opts, function(err, cfg) {\n\n    if (err) {\n      return callback(err);\n    }\n\n    // get spec\n    self.getSpec(name, cfg, function(err, spec) {\n\n      if (err) {\n        return callback(err);\n      }\n\n      // pass back task\n      callback(null, function(_callback) {\n        self.run(spec, cfg, _callback);\n      });\n    });\n  });\n};\n\n/**\n * Creates tasks to run async\n * @param  {Object}   opts     options\n * @param  {Function} callback callback(err, task)\n */\nexports.createTasks = function createTasks(opts, callback) {\n  var self = this;\n\n  // config\n  config(opts, function(err, cfg) {\n\n    if (err) {\n      return callback(err);\n    }\n\n    // get specs\n    self.getSpecs(cfg, function(err, specs) {\n\n      if (err) {\n        return callback(err);\n      }\n\n      var tasks = {};\n\n      // for each spec\n      _.each(specs, function(spec) {\n\n        // push task\n        tasks[spec.name] = function(_callback) {\n          self.run(spec, cfg, _callback);\n        };\n      });\n\n      // pass back tasks\n      callback(null, tasks);\n    });\n  });\n};\n\n/**\n * Run a task\n * @param  {Object}   specs    initialized specificiation\n * @param  {Object}   cfg      initialized configuration\n * @param  {Function} callback callback(err, output)\n */\nexports.run = function run(spec, cfg, callback) {\n\n  // do not output to input\n  if (spec.output === cfg.input) {\n\n    // inform CLI\n    if (cfg.cli) {\n      logger.info('Skipping input as output: ' + spec.output.cyan);\n    }\n\n    return callback();\n  }\n\n  fs.exists(cfg.input, function(exists) {\n\n    // input doesn't exist\n    if (!exists) {\n      return callback('Input not found: ' + cfg.input);\n    }\n\n    // NOTE: non-sync version didn't work in paralel\n    fs.createDirSync(path.dirname(spec.output));\n\n    var im = gm.subClass({\n      imageMagick: true\n    });\n\n    // read\n    var convert = im(cfg.input);\n\n    var flatten = !spec.alpha && !(cfg.nine && spec.ninePath);\n\n    // flatten\n    if (flatten) {\n      convert = convert.flatten();\n    }\n\n    var specRatio = spec.width / spec.height;\n\n    var containWidth, containHeight;\n\n    // nine or fill\n    if (!cfg.crop || (cfg.nine && spec.ninePath)) {\n\n      // only scale down\n      if (cfg.inputWidth > spec.width || cfg.inputHeight > spec.height) {\n\n        if (cfg.inputRatio > specRatio) {\n          containWidth = spec.width;\n          containHeight = Math.round(spec.width / cfg.inputRatio);\n        } else {\n          containWidth = Math.round(spec.height * cfg.inputRatio);\n          containHeight = spec.height;\n        }\n\n        // resize fitting dimensions (using in() or order will be wrong for fill)\n        convert = convert\n          .in('-resize').in(spec.width + 'x' + spec.height);\n\n      } else {\n        containWidth = cfg.inputWidth;\n        containHeight = cfg.inputHeight;\n      }\n\n      // nine\n      if (cfg.nine && spec.ninePath) {\n\n        // extent with 1px transparent border\n        convert = convert\n          .borderColor('none')\n          .border(1, 1);\n\n        // draw black pixels\n        convert = convert\n          .fill('black')\n\n        // stretchable area\n        .drawPoint(1, 0)\n          .drawPoint(containWidth, 0)\n          .drawPoint(0, 1)\n          .drawPoint(0, containHeight)\n\n        // padding box (required since API 21)\n        .drawLine(containWidth + 1, 1, containWidth + 1, containHeight)\n          .drawLine(1, containHeight + 1, containWidth, containHeight + 1);\n\n        // fill\n      } else {\n\n        // calculate required padding\n        var padLeft = Math.floor((spec.width - containWidth) / 2);\n        var padTop = Math.floor((spec.height - containHeight) / 2);\n\n        // enlarge canvas using outer pixel to fill (all using in() or order will be wrong)\n        convert = convert\n          .in('-define')\n          .in('distort:viewport=' + spec.width + 'x' + spec.height + '-' + padLeft + '-' + padTop)\n          .in('-distort').in('SRT').in('0')\n          .in('+repage');\n      }\n\n      // crop\n    } else {\n\n      var resize = (function() {\n        var contentRatio, z, smallerWidth, smallerHeight, factor,\n          result = {\n            width: spec.width,\n            height: spec.height\n          };\n\n        // user has given content dimensions\n        if (cfg.width && cfg.height) {\n          contentRatio = cfg.width / cfg.height;\n\n          // e.g. specs landscape, content is portrait\n          if (specRatio > contentRatio) {\n            z = spec.height / cfg.height;\n\n            // e.g. specs portrait, content is landscape\n          } else {\n            z = spec.width / cfg.width;\n          }\n\n          // don't scale up\n          if (z > 1) {\n            logger.warn('Target size is bigger then content: ' + spec.output.cyan);\n\n          } else {\n            smallerWidth = Math.round(cfg.inputWidth * z);\n            smallerHeight = Math.round(cfg.inputHeight * z);\n\n            // width or height won't cover specs anymore if content needs to fit as well\n            if (smallerWidth < spec.width || smallerHeight < spec.height) {\n              factor = Math.max(spec.width / smallerWidth, spec.height / smallerHeight);\n              logger.warn('For '.white + (spec.width + 'x' + spec.height).cyan + ' to contain '.white + (cfg.width + 'x' + cfg.height).cyan + ' the input needs to be at least: '.white + (Math.ceil(cfg.inputWidth * factor) + 'x' + Math.ceil(cfg.inputHeight * factor)).cyan);\n\n            } else {\n              result.width = smallerWidth;\n              result.height = smallerHeight;\n            }\n          }\n        }\n\n        return result;\n\n      })();\n\n      // resize covering dimensions\n      convert = convert.resize(resize.width, resize.height, '^');\n\n      // crop from center to exact dimensions\n      convert = convert\n        .gravity('Center')\n        .crop(spec.width, spec.height, 0, 0);\n    }\n\n    // border radius (http://www.rubblewebs.co.uk/imagemagick/display_example.php?example=69)\n    if (spec.type === 'icon' && !flatten && cfg.radius > 0 && _.size(_.difference(spec.platforms, ['ios', 'ipad', 'iphone', 'apple-watch'])) > 0) {\n      var radius = Math.ceil((spec.width / 100) * cfg.radius);\n\n      // in\n      convert = convert\n        .in('-size').in(spec.width + 'x' + spec.height)\n        .in('xc:none')\n        .in('-fill').in('white')\n        .in('-draw').in('roundRectangle 0,0 ' + (spec.width - 1) + ',' + (spec.height - 1) + ' ' + radius + ',' + radius);\n\n      // out\n      convert = convert\n        .compose('SrcIn')\n        .out('-composite');\n    }\n\n    // annotate\n    if (cfg.label) {\n      var fontSize = Math.round((containWidth || spec.width) / 11);\n\n      convert = convert\n        .fill('#F00')\n        .font(path.join(__dirname, 'Calibri.ttf'))\n        .fontSize(fontSize);\n\n      if (cfg.nine && spec.ninePath) {\n        convert = convert.drawText(1, (containHeight || spec.height) / 2, spec.name);\n      } else {\n        convert = convert.drawText(0, 0, spec.name);\n      }\n    }\n\n    // headers\n    convert = convert\n      .noProfile()\n      .units('PixelsPerInch')\n      .density(spec.dpi, spec.dpi);\n\n    // rotate\n    if (spec.rotate) {\n      convert = convert.rotate('white', spec.rotate);\n    }\n\n    // remove alpha\n    if (flatten) {\n      convert = convert.out('-background', 'white', '-alpha', 'off');\n    }\n\n    // write\n    convert.write(spec.output, function(err) {\n\n      if (err) {\n        return callback(err.code === 'ENOENT' ? 'Please install ImageMagick.' : err);\n      }\n\n      // async feedback for CLI\n      if (cfg.cli) {\n        logger.info('Generated: ' + spec.output.cyan);\n      }\n\n      // pass back output\n      callback(null, spec.output);\n\n    });\n\n    // show command\n    if (cfg.trace) {\n      logger.debug('Executing: ' + convert.args().join(' ').cyan);\n    }\n\n  });\n};\n\n/**\n * Get a spec\n * @param  {String}   name     spec to get\n * @param  {Object}   opts     options\n * @param  {Function} callback callback(err, output)\n */\nexports.getSpec = function getSpec(name, opts, callback) {\n\n  // not really needed, but for consistency ;)\n  config(opts, function(err, cfg) {\n\n    if (err) {\n      return callback(err);\n    }\n\n    // get initted spec\n    var spec = _initSpec(name, cfg);\n\n    // spec not found\n    if (!spec) {\n      return callback('Spec not found: ' + name);\n    }\n\n    // pass back spec\n    callback(null, spec);\n  });\n};\n\n/**\n * Get specs\n * @param  {Object}   opts     options\n * @param  {Function} callback callback(err, output)\n */\nexports.getSpecs = function getSpecs(opts, callback) {\n\n  // config\n  config(opts, function(err, cfg) {\n\n    if (err) {\n      return callback(err);\n    }\n\n    var _specs = {};\n\n    // filter specs\n    _.each(specs, function(spec, name) {\n\n      if (!_meetsSpec(name, cfg)) {\n        return;\n      }\n\n      // push initted spec\n      _specs[name] = _initSpec(name, cfg);\n    });\n\n    // handle DefaultIcon\n    if (cfg.type === 'icon') {\n      var iOSOnly = _.difference(cfg.platforms, ['ios', 'iphone', 'ipad']).length === 0;\n      var windowsOnly = (cfg.platforms.length === 1 && cfg.platforms[0] === 'windows');\n\n      // if only one of supported platforms was targetted, use the platform specific DefaultIcon only\n      if (iOSOnly || windowsOnly) {\n        delete _specs.DefaultIcon;\n\n        // if multiple platforms were targetted, use the general DefaultIcon only\n      } else {\n        delete _specs['ios-DefaultIcon'];\n        delete _specs['windows-DefaultIcon'];\n      }\n    }\n\n    // no specs not found\n    if (_.size(_specs) === 0) {\n      return callback('No specs found');\n    }\n\n    // pass back specs\n    callback(null, _specs);\n  });\n};\n\nfunction _meetsSpec(name, cfg) {\n  var spec = specs[name];\n\n  // does not meet type\n  if (cfg.type && spec.type !== cfg.type) {\n    return false;\n  }\n\n  if (spec.type === 'splash') {\n\n    if (!!cfg.storyboard !== !!spec.storyboard) {\n      return false;\n    }\n\n    // doest not meet orientation (only if we're not in 9-patch mode)\n    if (!cfg.nine && spec.orientation && cfg.orientation && cfg.orientation !== spec.orientation) {\n      return false;\n    }\n\n    // has no 9-patch path\n    if (cfg.nine && _.indexOf(spec.platforms, 'android') !== -1 && !(spec.ninePath || spec.alsoNine)) {\n      return false;\n    }\n  }\n\n  // does not meet min dpi\n  if (spec.dpi && cfg.minDpi && spec.dpi < cfg.minDpi) {\n    return false;\n  }\n\n  // does not meet max dpi\n  if (spec.dpi && cfg.maxDpi && spec.dpi > cfg.maxDpi) {\n    return false;\n  }\n\n  // does not satisfy sdkVersion\n  if (spec.sdkVersion && cfg.sdkVersion && !semver.satisfies(cfg.sdkVersion, spec.sdkVersion)) {\n    return false;\n  }\n\n  // has no localized path\n  if (cfg.locale && !spec.localePath) {\n    return false;\n  }\n\n  // does not meet at least one platform\n  if (!_.some(spec.platforms, function(platform) {\n      return !!cfg[platform];\n    })) {\n\n    return false;\n  }\n\n  return true;\n}\n\nfunction _initSpec(name, cfg) {\n\n  // doesn't exist\n  if (!specs[name]) {\n    return;\n  }\n\n  // cloning\n  var spec = _.clone(specs[name]);\n\n  // name\n  spec.name = name;\n\n  // default dpi\n  spec.dpi = spec.dpi || 72;\n\n  // size to widthxheight\n  if (spec.size) {\n    spec.width = spec.height = spec.size;\n  }\n\n  // fix\n  if (cfg.fix) {\n    if (spec.widthFix) {\n      spec.width = spec.widthFix;\n    }\n    if (spec.heightFix) {\n      spec.height = spec.heightFix;\n    }\n  }\n\n  // full output path\n  var _path;\n\n  if (cfg.nine && spec.ninePath) {\n    _path = cfg.locale ? spec.nineLocalePath.replace(':locale:', cfg.locale) : spec.ninePath;\n\n  } else {\n    _path = (cfg.locale && spec.localePath) ? spec.localePath.replace(':locale:', cfg.locale) : spec.path;  \n  }\n  \n  _path = _path.replace(':assets:', cfg.assetsDir);\n  _path = _path.replace(':platform:', cfg.platformDir);\n  _path = _path.replace(':i18n:', cfg.i18nDir);\n\n  spec.output = path.join(cfg.outputDir, _path);\n\n  return spec;\n}\n","/home/travis/build/npmtest/node-npmtest-ticons/node_modules/ticons/lib/specs.js":"// jscs:disable jsDoc\n'use strict';\n\nvar path = require('path'),\n  constants = require('./constants');\n\nexports.DefaultIcon = {\n  type: 'icon',\n  path: path.join('DefaultIcon.png'),\n  size: 1024,\n  platforms: ['ios', 'windows']\n};\n\n/**\n * iOS\n */\n\n// DefaultIcon\nexports['ios-DefaultIcon'] = {\n  type: 'icon',\n  path: path.join('DefaultIcon-ios.png'),\n  size: 1024,\n  platforms: ['ios']\n};\n\n// iTunes Artwork\nexports['ios-iTunesArtwork'] = {\n  type: 'icon',\n  path: path.join(':assets:', 'iphone', 'iTunesArtwork'),\n  size: 512,\n  platforms: ['ios'],\n  sdkVersion: '<5.0.0'\n};\nexports['ios-iTunesArtwork@2x'] = {\n  type: 'icon',\n  path: path.join(':assets:', 'iphone', 'iTunesArtwork@2x'),\n  size: 1024,\n  platforms: ['ios'],\n  sdkVersion: '<5.0.0'\n};\n\n// App icons\nexports['ios-appicon'] = {\n  type: 'icon',\n  path: path.join(':assets:', 'iphone', 'appicon.png'),\n  size: 57,\n  platforms: ['iphone', 'ios'],\n  sdkVersion: '<5.0.0'\n};\nexports['ios-appicon@2x'] = {\n  type: 'icon',\n  path: path.join(':assets:', 'iphone', 'appicon@2x.png'),\n  size: 114,\n  platforms: ['iphone'],\n  maxVersion: 6,\n  sdkVersion: '<5.0.0'\n};\nexports['ios-appicon-60'] = {\n  type: 'icon',\n  path: path.join(':assets:', 'iphone', 'appicon-60.png'),\n  size: 60,\n  platforms: ['iphone'],\n  minVersion: 7,\n  sdkVersion: '<5.0.0'\n};\nexports['ios-appicon-60@2x'] = {\n  type: 'icon',\n  path: path.join(':assets:', 'iphone', 'appicon-60@2x.png'),\n  size: 120,\n  platforms: ['iphone'],\n  minVersion: 7,\n  sdkVersion: '<5.0.0'\n};\nexports['ios-appicon-60@3x'] = {\n  type: 'icon',\n  path: path.join(':assets:', 'iphone', 'appicon-60@3x.png'),\n  size: 180,\n  platforms: ['iphone'],\n  minVersion: 8,\n  sdkVersion: '<5.0.0'\n};\nexports['ios-appicon-72'] = {\n  type: 'icon',\n  path: path.join(':assets:', 'iphone', 'appicon-72.png'),\n  size: 72,\n  platforms: ['ipad'],\n  maxVersion: 6,\n  sdkVersion: '<5.0.0'\n};\nexports['ios-appicon-72@2x'] = {\n  type: 'icon',\n  path: path.join(':assets:', 'iphone', 'appicon-72@2x.png'),\n  size: 144,\n  platforms: ['ipad'],\n  maxVersion: 6,\n  sdkVersion: '<5.0.0'\n};\nexports['ios-appicon-76'] = {\n  type: 'icon',\n  path: path.join(':assets:', 'iphone', 'appicon-76.png'),\n  size: 76,\n  platforms: ['ipad'],\n  minVersion: 7,\n  sdkVersion: '<5.0.0'\n};\nexports['ios-appicon-76@2x'] = {\n  type: 'icon',\n  path: path.join(':assets:', 'iphone', 'appicon-76@2x.png'),\n  size: 152,\n  platforms: ['ipad'],\n  minVersion: 7,\n  sdkVersion: '<5.0.0'\n};\n\n// Spotlight & Settings icons\nexports['ios-appicon-Small'] = {\n  type: 'icon',\n  path: path.join(':assets:', 'iphone', 'appicon-Small.png'),\n  size: 29,\n  platforms: ['iphone', 'ios'],\n  sdkVersion: '<5.0.0'\n};\nexports['ios-appicon-Small@2x'] = {\n  type: 'icon',\n  path: path.join(':assets:', 'iphone', 'appicon-Small@2x.png'),\n  size: 58,\n  platforms: ['iphone', 'ios'],\n  sdkVersion: '<5.0.0'\n};\nexports['ios-appicon-Small@3x'] = {\n  type: 'icon',\n  path: path.join(':assets:', 'iphone', 'appicon-Small@3x.png'),\n  size: 87,\n  platforms: ['iphone'],\n  minVersion: 8,\n  sdkVersion: '<5.0.0'\n};\nexports['ios-appicon-Small-40'] = {\n  type: 'icon',\n  path: path.join(':assets:', 'iphone', 'appicon-Small-40.png'),\n  size: 40,\n  platforms: ['ios'],\n  minVersion: 7,\n  sdkVersion: '<5.0.0'\n};\nexports['ios-appicon-Small-40@2x'] = {\n  type: 'icon',\n  path: path.join(':assets:', 'iphone', 'appicon-Small-40@2x.png'),\n  size: 80,\n  platforms: ['ios'],\n  minVersion: 7,\n  sdkVersion: '<5.0.0'\n};\nexports['ios-appicon-Small-50'] = {\n  type: 'icon',\n  path: path.join(':assets:', 'iphone', 'appicon-Small-50.png'),\n  size: 50,\n  platforms: ['ipad'],\n  maxVersion: 6,\n  sdkVersion: '<5.0.0'\n};\nexports['ios-appicon-Small-50@2x'] = {\n  type: 'icon',\n  path: path.join(':assets:', 'iphone', 'appicon-Small-50@2x.png'),\n  size: 100,\n  platforms: ['ipad'],\n  maxVersion: 6,\n  sdkVersion: '<5.0.0'\n};\nexports['ios-appicon-83.5@2x'] = {\n  type: 'icon',\n  path: path.join(':assets:', 'iphone', 'appicon-83.5@2x.png'),\n  size: 167,\n  platforms: ['ipad'],\n  minVersion: 9,\n  sdkVersion: '<5.0.0'\n};\n\n// Apple Watch\nexports['apple-watch-24@2x'] = {\n  type: 'icon',\n  path: path.join('apple-watch', 'icon-24@2x.png'),\n  size: 48,\n  platforms: ['apple-watch']\n};\nexports['apple-watch-27.5@2x'] = {\n  type: 'icon',\n  path: path.join('apple-watch', 'icon-27.5@2x.png'),\n  size: 55,\n  platforms: ['apple-watch']\n};\nexports['apple-watch-29@2x'] = {\n  type: 'icon',\n  path: path.join('apple-watch', 'icon-29@2x.png'),\n  size: 58,\n  platforms: ['apple-watch']\n};\nexports['apple-watch-29@3x'] = {\n  type: 'icon',\n  path: path.join('apple-watch', 'icon-29@3x.png'),\n  size: 87,\n  platforms: ['apple-watch']\n};\nexports['apple-watch-40@2x'] = {\n  type: 'icon',\n  path: path.join('apple-watch', 'icon-40@2x.png'),\n  size: 80,\n  platforms: ['apple-watch']\n};\nexports['apple-watch-44@2x'] = {\n  type: 'icon',\n  path: path.join('apple-watch', 'icon-44@2x.png'),\n  size: 88,\n  platforms: ['apple-watch']\n};\nexports['apple-watch-86@2x'] = {\n  type: 'icon',\n  path: path.join('apple-watch', 'icon-86@2x.png'),\n  size: 172,\n  platforms: ['apple-watch']\n};\nexports['apple-watch-98@2x'] = {\n  type: 'icon',\n  path: path.join('apple-watch', 'icon-98@2x.png'),\n  size: 196,\n  platforms: ['apple-watch']\n};\n\n// Splashes\nexports['ios-Default'] = {\n  type: 'splash',\n  path: path.join(':assets:', 'iphone', 'Default.png'),\n  localePath: path.join(':i18n:', ':locale:', 'Default.png'),\n  width: 320,\n  height: 480,\n  platforms: ['iphone', 'ios'],\n  sdkVersion: '<5.0.0'\n};\nexports['ios-Default@2x'] = {\n  type: 'splash',\n  path: path.join(':assets:', 'iphone', 'Default@2x.png'),\n  localePath: path.join(':i18n:', ':locale:', 'Default@2x.png'),\n  width: 640,\n  height: 960,\n  platforms: ['iphone']\n};\nexports['ios-Default-568h@2x'] = {\n  type: 'splash',\n  path: path.join(':assets:', 'iphone', 'Default-568h@2x.png'),\n  localePath: path.join(':i18n:', ':locale:', 'Default-568h@2x.png'),\n  width: 640,\n  height: 1136,\n  platforms: ['iphone']\n};\nexports['ios-Default-667h@2x'] = {\n  type: 'splash',\n  path: path.join(':assets:', 'iphone', 'Default-667h@2x.png'),\n  localePath: path.join(':i18n:', ':locale:', 'Default-667h@2x.png'),\n  width: 750,\n  height: 1334,\n  platforms: ['iphone']\n};\nexports['ios-Default-Portrait-736h@3x'] = {\n  type: 'splash',\n  path: path.join(':assets:', 'iphone', 'Default-Portrait-736h@3x.png'),\n  localePath: path.join(':i18n:', ':locale:', 'Default-Portrait-736h@3x.png'),\n  width: 1242,\n  height: 2208,\n  platforms: ['iphone']\n};\nexports['ios-Default-Landscape-736h@3x'] = {\n  type: 'splash',\n  path: path.join(':assets:', 'iphone', 'Default-Landscape-736h@3x.png'),\n  localePath: path.join(':i18n:', ':locale:', 'Default-Landscape-736h@3x.png'),\n  width: 2208,\n  height: 1242,\n  platforms: ['iphone']\n};\nexports['ios-Default-Portrait'] = {\n  type: 'splash',\n  path: path.join(':assets:', 'iphone', 'Default-Portrait.png'),\n  localePath: path.join(':i18n:', ':locale:', 'Default-Portrait.png'),\n  width: 768,\n  height: 1004,\n  heightFix: 1024,\n  platforms: ['ipad'],\n  orientation: 'portrait'\n};\nexports['ios-Default-Portrait@2x'] = {\n  type: 'splash',\n  path: path.join(':assets:', 'iphone', 'Default-Portrait@2x.png'),\n  localePath: path.join(':i18n:', ':locale:', 'Default-Portrait@2x.png'),\n  width: 1536,\n  height: 2008,\n  heightFix: 2048,\n  platforms: ['ipad'],\n  orientation: 'portrait'\n};\nexports['ios-Default-Landscape'] = {\n  type: 'splash',\n  path: path.join(':assets:', 'iphone', 'Default-Landscape.png'),\n  localePath: path.join(':i18n:', ':locale:', 'Default-Landscape.png'),\n  width: 1024,\n  height: 748,\n  heightFix: 768,\n  platforms: ['ipad'],\n  orientation: 'landscape'\n};\nexports['ios-Default-Landscape@2x'] = {\n  type: 'splash',\n  path: path.join(':assets:', 'iphone', 'Default-Landscape@2x.png'),\n  localePath: path.join(':i18n:', ':locale:', 'Default-Landscape@2x.png'),\n  width: 2048,\n  height: 1496,\n  heightFix: 1536,\n  platforms: ['ipad'],\n  orientation: 'landscape'\n};\n\nexports['LaunchLogo~iphone'] = {\n  type: 'splash',\n  path: path.join(':assets:', 'iphone', 'LaunchLogo~iphone.png'),\n  size: 320,\n  platforms: ['iphone'],\n  sdkVersion: '>=5.2.0',\n  alpha: true,\n  storyboard: true\n};\nexports['LaunchLogo@2x~iphone'] = {\n  type: 'splash',\n  path: path.join(':assets:', 'iphone', 'LaunchLogo@2x~iphone.png'),\n  size: 374,\n  platforms: ['iphone'],\n  sdkVersion: '>=5.2.0',\n  alpha: true,\n  storyboard: true\n};\nexports['LaunchLogo@3x~iphone'] = {\n  type: 'splash',\n  path: path.join(':assets:', 'iphone', 'LaunchLogo@3x~iphone.png'),\n  size: 621,\n  platforms: ['iphone'],\n  sdkVersion: '>=5.2.0',\n  alpha: true,\n  storyboard: true\n};\nexports['LaunchLogo~ipad'] = {\n  type: 'splash',\n  path: path.join(':assets:', 'iphone', 'LaunchLogo~ipad.png'),\n  size: 384,\n  platforms: ['ipad'],\n  sdkVersion: '>=5.2.0',\n  alpha: true,\n  storyboard: true\n};\nexports['LaunchLogo@2x~ipad'] = {\n  type: 'splash',\n  path: path.join(':assets:', 'iphone', 'LaunchLogo@2x~ipad.png'),\n  size: 1024,\n  platforms: ['ipad'],\n  sdkVersion: '>=5.2.0',\n  alpha: true,\n  storyboard: true\n};\n\n// assets\nexports['ios-images@3x'] = {\n  type: 'asset',\n  path: path.join(':assets:', 'iphone', 'images'),\n  dpi: constants.dpi.xxhdpi,\n  platforms: ['ios'],\n  suffix: '@3x'\n};\nexports['ios-images@2x'] = {\n  type: 'asset',\n  path: path.join(':assets:', 'iphone', 'images'),\n  dpi: constants.dpi.xhdpi,\n  platforms: ['ios'],\n  suffix: '@2x'\n};\nexports['ios-images'] = {\n  type: 'asset',\n  path: path.join(':assets:', 'images'),\n  dpi: constants.dpi.mdpi,\n  platforms: ['ios', 'android', 'mobileweb', 'tizen', 'blackberry']\n};\n\n/**\n * Android\n */\n\n// Google Play\nexports['android-MarketplaceArtwork'] = {\n  type: 'icon',\n  path: path.join('MarketplaceArtwork.png'),\n  size: 512,\n  platforms: ['android']\n};\nexports['android-MarketplaceArtworkFeature'] = {\n  type: 'splash',\n  path: path.join('MarketplaceArtworkFeature.png'),\n  alsoNine: true,\n  width: 1024,\n  height: 500,\n  platforms: ['android']\n};\n\n// icons\nexports['android-appicon'] = {\n  type: 'icon',\n  path: path.join(':assets:', 'android', 'appicon.png'),\n  size: 128,\n  alpha: true,\n  platforms: ['android']\n};\nexports['android-appicon-ldpi'] = {\n  type: 'icon',\n  path: path.join(':platform:', 'android', 'res', 'drawable-ldpi', 'appicon.png'),\n  size: 36,\n  alpha: true,\n  dpi: constants.dpi.ldpi,\n  platforms: ['android']\n};\nexports['android-appicon-mdpi'] = {\n  type: 'icon',\n  path: path.join(':platform:', 'android', 'res', 'drawable-mdpi', 'appicon.png'),\n  size: 48,\n  alpha: true,\n  dpi: constants.dpi.mdpi,\n  platforms: ['android']\n};\nexports['android-appicon-hdpi'] = {\n  type: 'icon',\n  path: path.join(':platform:', 'android', 'res', 'drawable-hdpi', 'appicon.png'),\n  size: 72,\n  alpha: true,\n  dpi: constants.dpi.hdpi,\n  platforms: ['android']\n};\nexports['android-appicon-xhdpi'] = {\n  type: 'icon',\n  path: path.join(':platform:', 'android', 'res', 'drawable-xhdpi', 'appicon.png'),\n  size: 96,\n  alpha: true,\n  dpi: constants.dpi.xhdpi,\n  platforms: ['android']\n};\nexports['android-appicon-xxhdpi'] = {\n  type: 'icon',\n  path: path.join(':platform:', 'android', 'res', 'drawable-xxhdpi', 'appicon.png'),\n  size: 144,\n  alpha: true,\n  dpi: constants.dpi.xxhdpi,\n  platforms: ['android']\n};\nexports['android-appicon-xxxhdpi'] = {\n  type: 'icon',\n  path: path.join(':platform:', 'android', 'res', 'drawable-xxxhdpi', 'appicon.png'),\n  size: 192,\n  alpha: true,\n  dpi: constants.dpi.xxxhdpi,\n  platforms: ['android']\n};\n\n// splashes\nexports['android-default'] = { // mdpi\n  type: 'splash',\n  path: path.join(':assets:', 'android', 'default.png'),\n  width: 320,\n  height: 480,\n  platforms: ['android']\n};\nexports['android-default-long-land-xxxhdpi'] = {\n  type: 'splash',\n  path: path.join(':assets:', 'android', 'images', 'res-long-land-xxxhdpi', 'default.png'),\n  localePath: path.join(':assets:', 'android', 'images', 'res-:locale:-long-land-xxxhdpi', 'default.png'),\n  width: 1920,\n  height: 1280,\n  dpi: constants.dpi.xxxhdpi,\n  platforms: ['android'],\n  orientation: 'landscape'\n};\nexports['android-default-long-land-xxhdpi'] = {\n  type: 'splash',\n  path: path.join(':assets:', 'android', 'images', 'res-long-land-xxhdpi', 'default.png'),\n  localePath: path.join(':assets:', 'android', 'images', 'res-:locale:-long-land-xxhdpi', 'default.png'),\n  width: 1600,\n  height: 960,\n  dpi: constants.dpi.xxhdpi,\n  platforms: ['android'],\n  orientation: 'landscape'\n};\nexports['android-default-long-land-xhdpi'] = {\n  type: 'splash',\n  path: path.join(':assets:', 'android', 'images', 'res-long-land-xhdpi', 'default.png'),\n  localePath: path.join(':assets:', 'android', 'images', 'res-:locale:-long-land-xhdpi', 'default.png'),\n  width: 960,\n  height: 640,\n  dpi: constants.dpi.xhdpi,\n  platforms: ['android'],\n  orientation: 'landscape'\n};\nexports['android-default-long-land-hdpi'] = {\n  type: 'splash',\n  path: path.join(':assets:', 'android', 'images', 'res-long-land-hdpi', 'default.png'),\n  localePath: path.join(':assets:', 'android', 'images', 'res-:locale:-long-land-hdpi', 'default.png'),\n  width: 800,\n  height: 480,\n  dpi: constants.dpi.hdpi,\n  platforms: ['android'],\n  orientation: 'landscape'\n};\nexports['android-default-long-land-mdpi'] = { // missing in docs and needed because mdpi default is portrait\n  type: 'splash',\n  path: path.join(':assets:', 'android', 'images', 'res-long-land-mdpi', 'default.png'),\n  localePath: path.join(':assets:', 'android', 'images', 'res-:locale:-long-land-mdpi', 'default.png'),\n  width: 480,\n  height: 320,\n  dpi: constants.dpi.mdpi,\n  platforms: ['android'],\n  orientation: 'landscape'\n};\nexports['android-default-long-land-ldpi'] = {\n  type: 'splash',\n  path: path.join(':assets:', 'android', 'images', 'res-long-land-ldpi', 'default.png'),\n  localePath: path.join(':assets:', 'android', 'images', 'res-:locale:-long-land-ldpi', 'default.png'),\n  width: 400,\n  height: 240,\n  dpi: constants.dpi.ldpi,\n  platforms: ['android'],\n  orientation: 'landscape'\n};\nexports['android-default-long-port-xxxhdpi'] = {\n  type: 'splash',\n  path: path.join(':assets:', 'android', 'images', 'res-long-port-xxxhdpi', 'default.png'),\n  localePath: path.join(':assets:', 'android', 'images', 'res-:locale:-long-port-xxxhdpi', 'default.png'),\n  width: 1280,\n  height: 1920,\n  dpi: constants.dpi.xxxhdpi,\n  platforms: ['android'],\n  orientation: 'portrait'\n};\nexports['android-default-long-port-xxhdpi'] = {\n  type: 'splash',\n  path: path.join(':assets:', 'android', 'images', 'res-long-port-xxhdpi', 'default.png'),\n  localePath: path.join(':assets:', 'android', 'images', 'res-:locale:-long-port-xxhdpi', 'default.png'),\n  width: 960,\n  height: 1600,\n  dpi: constants.dpi.xxhdpi,\n  platforms: ['android'],\n  orientation: 'portrait'\n};\nexports['android-default-long-port-xhdpi'] = {\n  type: 'splash',\n  path: path.join(':assets:', 'android', 'images', 'res-long-port-xhdpi', 'default.png'),\n  localePath: path.join(':assets:', 'android', 'images', 'res-:locale:-long-port-xhdpi', 'default.png'),\n  width: 640,\n  height: 960,\n  dpi: constants.dpi.xhdpi,\n  platforms: ['android'],\n  orientation: 'portrait'\n};\nexports['android-default-long-port-hdpi'] = {\n  type: 'splash',\n  path: path.join(':assets:', 'android', 'images', 'res-long-port-hdpi', 'default.png'),\n  localePath: path.join(':assets:', 'android', 'images', 'res-:locale:-long-port-hdpi', 'default.png'),\n  width: 480,\n  height: 800,\n  dpi: constants.dpi.hdpi,\n  platforms: ['android'],\n  orientation: 'portrait'\n};\nexports['android-default-long-port-mdpi'] = { // missing in docs and needed for locale\n  type: 'splash',\n  path: path.join(':assets:', 'android', 'images', 'res-long-port-mdpi', 'default.png'),\n  localePath: path.join(':assets:', 'android', 'images', 'res-:locale:-long-port-mdpi', 'default.png'),\n  width: 320,\n  height: 480,\n  dpi: constants.dpi.mdpi,\n  platforms: ['android'],\n  orientation: 'portrait'\n};\nexports['android-default-long-port-ldpi'] = {\n  type: 'splash',\n  path: path.join(':assets:', 'android', 'images', 'res-long-port-ldpi', 'default.png'),\n  localePath: path.join(':assets:', 'android', 'images', 'res-:locale:-long-port-ldpi', 'default.png'),\n  width: 240,\n  height: 400,\n  dpi: constants.dpi.ldpi,\n  platforms: ['android'],\n  orientation: 'portrait'\n};\nexports['android-default-notlong-land-xxxhdpi'] = {\n  type: 'splash',\n  path: path.join(':assets:', 'android', 'images', 'res-notlong-land-xxxhdpi', 'default.png'),\n  localePath: path.join(':assets:', 'android', 'images', 'res-:locale:-notlong-land-xxxhdpi', 'default.png'),\n  width: 1920,\n  height: 1280,\n  dpi: constants.dpi.xxhdpi,\n  platforms: ['android'],\n  orientation: 'landscape'\n};\nexports['android-default-notlong-land-xxhdpi'] = {\n  type: 'splash',\n  path: path.join(':assets:', 'android', 'images', 'res-notlong-land-xxhdpi', 'default.png'),\n  localePath: path.join(':assets:', 'android', 'images', 'res-:locale:-notlong-land-xxhdpi', 'default.png'),\n  width: 1600,\n  height: 960,\n  dpi: constants.dpi.xxhdpi,\n  platforms: ['android'],\n  orientation: 'landscape'\n};\nexports['android-default-notlong-land-xhdpi'] = {\n  type: 'splash',\n  path: path.join(':assets:', 'android', 'images', 'res-notlong-land-xhdpi', 'default.png'),\n  localePath: path.join(':assets:', 'android', 'images', 'res-:locale:-notlong-land-xhdpi', 'default.png'),\n  width: 960,\n  height: 640,\n  dpi: constants.dpi.xhdpi,\n  platforms: ['android'],\n  orientation: 'landscape'\n};\nexports['android-default-notlong-land-hdpi'] = {\n  type: 'splash',\n  path: path.join(':assets:', 'android', 'images', 'res-notlong-land-hdpi', 'default.png'),\n  localePath: path.join(':assets:', 'android', 'images', 'res-:locale:-notlong-land-hdpi', 'default.png'),\n  width: 800,\n  widthFix: 640,\n  height: 480,\n  dpi: constants.dpi.hdpi,\n  platforms: ['android'],\n  orientation: 'landscape'\n};\nexports['android-default-notlong-land-mdpi'] = {\n  type: 'splash',\n  path: path.join(':assets:', 'android', 'images', 'res-notlong-land-mdpi', 'default.png'),\n  localePath: path.join(':assets:', 'android', 'images', 'res-:locale:-notlong-land-mdpi', 'default.png'),\n  width: 480,\n  height: 320,\n  dpi: constants.dpi.mdpi,\n  platforms: ['android'],\n  orientation: 'landscape'\n};\nexports['android-default-notlong-land-ldpi'] = {\n  type: 'splash',\n  path: path.join(':assets:', 'android', 'images', 'res-notlong-land-ldpi', 'default.png'),\n  localePath: path.join(':assets:', 'android', 'images', 'res-:locale:-notlong-land-ldpi', 'default.png'),\n  width: 320,\n  height: 240,\n  dpi: constants.dpi.ldpi,\n  platforms: ['android'],\n  orientation: 'landscape'\n};\nexports['android-default-notlong-port-xxxhdpi'] = {\n  type: 'splash',\n  path: path.join(':assets:', 'android', 'images', 'res-notlong-port-xxxhdpi', 'default.png'),\n  localePath: path.join(':assets:', 'android', 'images', 'res-:locale:-notlong-port-xxxhdpi', 'default.png'),\n  ninePath: path.join(':platform:', 'android', 'res', 'drawable-xxxhdpi', 'background.9.png'),\n  nineLocalePath: path.join(':platform:', 'android', 'res', 'drawable-:locale:-xxxhdpi', 'background.9.png'),\n  width: 1280,\n  height: 1920,\n  dpi: constants.dpi.xxxhdpi,\n  platforms: ['android'],\n  orientation: 'portrait'\n};\nexports['android-default-notlong-port-xxhdpi'] = {\n  type: 'splash',\n  path: path.join(':assets:', 'android', 'images', 'res-notlong-port-xxhdpi', 'default.png'),\n  localePath: path.join(':assets:', 'android', 'images', 'res-:locale:-notlong-port-xxhdpi', 'default.png'),\n  ninePath: path.join(':platform:', 'android', 'res', 'drawable-xxhdpi', 'background.9.png'),\n  nineLocalePath: path.join(':platform:', 'android', 'res', 'drawable-:locale:-xxhdpi', 'background.9.png'),\n  width: 960,\n  height: 1600,\n  dpi: constants.dpi.xxhdpi,\n  platforms: ['android'],\n  orientation: 'portrait'\n};\nexports['android-default-notlong-port-xhdpi'] = {\n  type: 'splash',\n  path: path.join(':assets:', 'android', 'images', 'res-notlong-port-xhdpi', 'default.png'),\n  localePath: path.join(':assets:', 'android', 'images', 'res-:locale:-notlong-port-xhdpi', 'default.png'),\n  ninePath: path.join(':platform:', 'android', 'res', 'drawable-xhdpi', 'background.9.png'),\n  nineLocalePath: path.join(':platform:', 'android', 'res', 'drawable-:locale:-xhdpi', 'background.9.png'),\n  width: 640,\n  height: 960,\n  dpi: constants.dpi.xhdpi,\n  platforms: ['android'],\n  orientation: 'portrait'\n};\nexports['android-default-notlong-port-hdpi'] = {\n  type: 'splash',\n  path: path.join(':assets:', 'android', 'images', 'res-notlong-port-hdpi', 'default.png'),\n  localePath: path.join(':assets:', 'android', 'images', 'res-:locale:-notlong-port-hdpi', 'default.png'),\n  ninePath: path.join(':platform:', 'android', 'res', 'drawable-hdpi', 'background.9.png'),\n  nineLocalePath: path.join(':platform:', 'android', 'res', 'drawable-:locale:-hdpi', 'background.9.png'),\n  width: 480,\n  height: 800,\n  heightFix: 640,\n  dpi: constants.dpi.hdpi,\n  platforms: ['android'],\n  orientation: 'portrait'\n};\nexports['android-default-notlong-port-mdpi'] = {\n  type: 'splash',\n  path: path.join(':assets:', 'android', 'images', 'res-notlong-port-mdpi', 'default.png'),\n  localePath: path.join(':assets:', 'android', 'images', 'res-:locale:-notlong-port-mdpi', 'default.png'),\n  ninePath: path.join(':platform:', 'android', 'res', 'drawable-mdpi', 'background.9.png'),\n  nineLocalePath: path.join(':platform:', 'android', 'res', 'drawable-:locale:-mdpi', 'background.9.png'),\n  width: 320,\n  height: 480,\n  dpi: constants.dpi.mdpi,\n  platforms: ['android'],\n  orientation: 'portrait'\n};\nexports['android-default-notlong-port-ldpi'] = {\n  type: 'splash',\n  path: path.join(':assets:', 'android', 'images', 'res-notlong-port-ldpi', 'default.png'),\n  localePath: path.join(':assets:', 'android', 'images', 'res-:locale:-notlong-port-ldpi', 'default.png'),\n  ninePath: path.join(':platform:', 'android', 'res', 'drawable-ldpi', 'background.9.png'),\n  nineLocalePath: path.join(':platform:', 'android', 'res', 'drawable-:locale:-ldpi', 'background.9.png'),\n  width: 240,\n  height: 320,\n  dpi: constants.dpi.ldpi,\n  platforms: ['android'],\n  orientation: 'portrait'\n};\n\n// assets\nexports['android-res-xxxhdpi'] = {\n  type: 'asset',\n  path: path.join(':assets:', 'android', 'images', 'res-xxxhdpi'),\n  dpi: constants.dpi.xxxhdpi,\n  platforms: ['android']\n};\nexports['android-res-xxhdpi'] = {\n  type: 'asset',\n  path: path.join(':assets:', 'android', 'images', 'res-xxhdpi'),\n  dpi: constants.dpi.xxhdpi,\n  platforms: ['android']\n};\nexports['android-res-xhdpi'] = {\n  type: 'asset',\n  path: path.join(':assets:', 'android', 'images', 'res-xhdpi'),\n  dpi: constants.dpi.xhdpi,\n  platforms: ['android']\n};\nexports['android-res-hdpi'] = {\n  type: 'asset',\n  path: path.join(':assets:', 'android', 'images', 'res-hdpi'),\n  dpi: constants.dpi.hdpi,\n  platforms: ['android']\n};\nexports['android-res-mdpi'] = {\n  type: 'asset',\n  path: path.join(':assets:', 'android', 'images', 'res-mdpi'),\n  dpi: constants.dpi.mdpi,\n  platforms: ['android']\n};\nexports['android-res-ldpi'] = {\n  type: 'asset',\n  path: path.join(':assets:', 'android', 'images', 'res-ldpi'),\n  dpi: constants.dpi.ldpi,\n  platforms: ['android']\n};\n\n/**\n * Mobile Web\n */\n\n// icons\nexports['mobileweb-appicon'] = {\n  type: 'icon',\n  path: path.join(':assets:', 'mobileweb', 'appicon.png'),\n  size: 128,\n  alpha: true,\n  platforms: ['mobileweb']\n};\n\n// splashes\nexports['mobileweb-Default-jpg'] = {\n  type: 'splash',\n  path: path.join(':assets:', 'mobileweb', 'apple_startup_images', 'Default.jpg'),\n  width: 320,\n  height: 460,\n  platforms: ['mobileweb']\n};\nexports['mobileweb-Default-png'] = {\n  type: 'splash',\n  path: path.join(':assets:', 'mobileweb', 'apple_startup_images', 'Default.png'),\n  width: 320,\n  height: 460,\n  platforms: ['mobileweb']\n};\nexports['mobileweb-Default-Landscape-jpg'] = {\n  type: 'splash',\n  path: path.join(':assets:', 'mobileweb', 'apple_startup_images', 'Default-Landscape.jpg'),\n  width: 768,\n  height: 1024,\n  rotate: 90,\n  platforms: ['mobileweb'],\n  orientation: 'landscape'\n};\nexports['mobileweb-Default-Landscape-png'] = {\n  type: 'splash',\n  path: path.join(':assets:', 'mobileweb', 'apple_startup_images', 'Default-Landscape.png'),\n  width: 768,\n  height: 1024,\n  rotate: 90,\n  platforms: ['mobileweb'],\n  orientation: 'landscape'\n};\nexports['mobileweb-Default-Portrait-jpg'] = {\n  type: 'splash',\n  path: path.join(':assets:', 'mobileweb', 'apple_startup_images', 'Default-Portrait.jpg'),\n  width: 768,\n  height: 1024,\n  platforms: ['mobileweb'],\n  orientation: 'portrait'\n};\nexports['mobileweb-Default-Portrait-png'] = {\n  type: 'splash',\n  path: path.join(':assets:', 'mobileweb', 'apple_startup_images', 'Default-Portrait.png'),\n  width: 768,\n  height: 1024,\n  platforms: ['mobileweb'],\n  orientation: 'portrait'\n};\n\n/**\n * Windows\n */\n\n// DefaultIcon\nexports['windows-DefaultIcon'] = {\n  type: 'icon',\n  path: path.join('DefaultIcon-windows.png'),\n  size: 1024,\n  alpha: true,\n  platforms: ['windows']\n};\n\n// icons\nexports['windows-appicon'] = {\n  type: 'icon',\n  path: path.join(':assets:', 'windows', 'appicon.png'),\n  size: 100,\n  alpha: true,\n  platforms: ['windows'],\n  sdkVersion: '<5.1.0'\n};\nexports['windows-Logo'] = {\n  type: 'icon',\n  path: path.join(':assets:', 'windows', 'Logo.png'),\n  size: 150,\n  alpha: true,\n  platforms: ['windows'],\n  sdkVersion: '<5.1.0'\n};\nexports['windows-SmallLogo'] = {\n  type: 'icon',\n  path: path.join(':assets:', 'windows', 'SmallLogo.png'),\n  size: 30,\n  alpha: true,\n  platforms: ['windows'],\n  sdkVersion: '<5.1.0'\n};\nexports['windows-StoreLogo'] = {\n  type: 'icon',\n  path: path.join(':assets:', 'windows', 'StoreLogo.png'),\n  size: 50,\n  alpha: true,\n  platforms: ['windows'],\n  sdkVersion: '<5.1.0'\n};\nexports['windows-Square44x44Logo'] = {\n  type: 'icon',\n  path: path.join(':assets:', 'windows', 'Square44x44Logo.png'),\n  size: 44,\n  alpha: true,\n  platforms: ['windows'],\n  sdkVersion: '<5.1.0'\n};\nexports['windows-Square71x71Logo'] = {\n  type: 'icon',\n  path: path.join(':assets:', 'windows', 'Square71x71Logo.png'),\n  size: 71,\n  alpha: true,\n  platforms: ['windows'],\n  sdkVersion: '<5.1.0'\n};\nexports['windows-Square150x150Logo'] = {\n  type: 'icon',\n  path: path.join(':assets:', 'windows', 'Square150x150Logo.png'),\n  size: 150,\n  alpha: true,\n  platforms: ['windows'],\n  sdkVersion: '<5.1.0'\n};\n\n// splashes\nexports['windows-SplashScreen'] = {\n  type: 'splash',\n  path: path.join(':assets:', 'windows', 'SplashScreen.png'),\n  width: 620,\n  height: 300,\n  platforms: ['windows']\n};\nexports['windows-SplashScreen.scale-240'] = {\n  type: 'splash',\n  path: path.join(':assets:', 'windows', 'SplashScreen.scale-240.png'),\n  width: 1152,\n  height: 1920,\n  platforms: ['windows']\n};\n\n/**\n * Tizen\n */\n\n// icons\nexports['tizen-appicon'] = {\n  type: 'icon',\n  path: path.join(':assets:', 'tizen', 'appicon.png'),\n  size: 96,\n  alpha: true,\n  platforms: ['tizen']\n};\n\n/**\n * BlackBerry\n */\n\n// icons\nexports['blackberry-appicon'] = {\n  type: 'icon',\n  path: path.join(':assets:', 'blackberry', 'appicon.png'),\n  size: 114,\n  alpha: true,\n  platforms: ['blackberry']\n};\n\n// splashes\nexports['blackberry-splash-600x1024'] = {\n  type: 'splash',\n  path: path.join(':assets:', 'blackberry', 'splash-600x1024.png'),\n  width: 768,\n  height: 1280,\n  platforms: ['blackberry']\n};\nexports['blackberry-splash-720x720'] = {\n  type: 'splash',\n  path: path.join(':assets:', 'blackberry', 'splash-720x720.png'),\n  width: 720,\n  height: 720,\n  platforms: ['blackberry']\n};\nexports['blackberry-splash-768x1280'] = {\n  type: 'splash',\n  path: path.join(':assets:', 'blackberry', 'splash-768x1280.png'),\n  width: 768,\n  height: 1280,\n  platforms: ['blackberry']\n};\n"}